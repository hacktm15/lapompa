<?php

/**
 * @file
 * Contains benzinarie.module..
 */

use Drupal\benzinarie\Carburant\PretCarburant;
use Drupal\benzinarie\Carburant\TipCarburant;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function benzinarie_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the benzinarie module.
    case 'help.page.benzinarie':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Se ocupa cu editarea si afisarea benzinariilor') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function benzinarie_theme() {
  $theme = [];

  return $theme;
}

/**
 * Implements hook_entity_extra_field_info().
 */
function benzinarie_entity_extra_field_info() {
  $extra = array();
  $description = t('Element din benzinarie');

  foreach (TipCarburant::getTipuriCarburant() as $tip_carburant) {
    $extra['node']['benzinarie']['display']['tip_carburant_' . $tip_carburant->id()] = [
      'label' => t('Pret la @tip_carburant', ['@tip_carburant' => $tip_carburant->label()]),
      'description' => $description,
      'weight' => 0,
      'visible' => TRUE,
    ];
  }

  $extra['node']['benzinarie']['display']['titlu_compus'] = [
    'label' => t('Titlu compus'),
    'description' => $description,
    'weight' => 0,
    'visible' => TRUE,
  ];

  $extra['node']['benzinarie']['display']['pret_combustibil_curent'] = [
    'label' => t('Pret combustibil curent'),
    'description' => $description,
    'weight' => 0,
    'visible' => TRUE,
  ];

  return $extra;
}

/**
 * Implments hook_ENTITY_TYPE_view().
 */
function benzinarie_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->getType() == 'benzinarie') {
    foreach (TipCarburant::getTipuriCarburant() as $tip_carburant) {
      if ($display->getComponent('tip_carburant_' . $tip_carburant->id()) && $pret = PretCarburant::getPret($entity, $tip_carburant)) {
        $build['tip_carburant_' . $tip_carburant->id()] = [
          '#markup' => '<div class="' . 'tip_carburant_' . $tip_carburant->id() . '">' . t('@tip_carburant @pret lei', ['@tip_carburant' => $tip_carburant->label(), '@pret' => $pret->field_valoare->value]) . '</div>',
        ];
      }
    }

  if ($display->getComponent('titlu_compus')) {
    $build['titlu_compus'] = [
      '#markup' => '<h2">' . t('@lant @locatie', [
          '@lant' => $entity->field_lant->entity->label(),
          '@locatie' => $entity->title->value
        ]) . '</h2>',
    ];
  }

    if ($display->getComponent('pret_combustibil_curent') && $pret_curent = PretCarburant::getPretCarburantCurent($entity)) {
      $build['pret_combustibil_curent'] = [
        '#markup' => '<div class="pret-curent">' . $pret_curent->field_valoare->value . '<span class="currency">lei</span></div>'
      ];
    }
  }
}